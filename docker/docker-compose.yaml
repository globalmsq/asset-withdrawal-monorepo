# Asset Withdrawal System - Docker Compose Configuration
#
# This is a development configuration. For production, ensure:
# 1. Set MYSQL_ROOT_PASSWORD environment variable with a secure password
# 2. Set LOCALSTACK_CORS_ORIGINS to specific allowed origins
# 3. Use .env file or export environment variables before running docker-compose
#
# Example:
#   export MYSQL_ROOT_PASSWORD="your-secure-password"
#   export LOCALSTACK_CORS_ORIGINS="https://your-domain.com"
#   docker-compose up
#
# For development with default values:
#   docker-compose up
#   (will use development defaults specified in the file)

x-localstack-account: &localstack-account
  AWS_ENDPOINT: http://localstack:4566
  AWS_DEFAULT_REGION: ap-northeast-2
  AWS_ACCESS_KEY_ID: test
  AWS_SECRET_ACCESS_KEY: test

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: withdrawal-mysql
    environment:
      # WARNING: Use secure passwords in production. Default is for development only.
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-pass}
      MYSQL_DATABASE: withdrawal_system
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    restart: unless-stopped
    networks:
      - withdrawal-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'export MYSQL_PWD=$${MYSQL_ROOT_PASSWORD:-pass}; mysqladmin ping -h localhost -u root',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  localstack:
    image: localstack/localstack:latest
    container_name: withdrawal-localstack
    ports:
      - 4566:4566
      - 4510-4559:4510-4559
    environment:
      <<: *localstack-account
      # DEBUG: 1
      SERVICES: sqs,secretsmanager
      # WARNING: Restrict CORS origins in production. Default allows localhost only.
      EXTRA_CORS_ALLOWED_ORIGINS: ${LOCALSTACK_CORS_ORIGINS:-http://localhost:*,http://127.0.0.1:*}
    volumes:
      - localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./scripts/init-localstack.sh:/etc/localstack/init/ready.d/init-aws.sh
    networks:
      - withdrawal-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4566/_localstack/health']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  sqs-admin:
    image: pacovk/sqs-admin
    ports:
      - 3999:3999
    environment:
      <<: *localstack-account
      SQS_ENDPOINT_URL: http://localstack:4566
      SQS_AWS_REGION: ap-northeast-2
    depends_on:
      - localstack
    networks:
      - withdrawal-network

  # Redis Stack for nonce management
  redis:
    image: redis/redis-stack:latest
    container_name: withdrawal-redis
    ports:
      - 6379:6379
      - 8001:8001 # RedisInsight web UI
    environment:
      REDIS_ARGS: '--save 60 1 --save 300 10 --save 900 100'
    volumes:
      - redis-data:/data
    networks:
      - withdrawal-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Hardhat Local Blockchain
  hardhat-node:
    build:
      context: ./hardhat
      dockerfile: Dockerfile
    container_name: withdrawal-hardhat-node
    ports:
      - 8545:8545
    networks:
      - withdrawal-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:8545']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Hardhat Contract Deployment
  hardhat-deploy:
    build:
      context: ./hardhat
      dockerfile: Dockerfile
    container_name: withdrawal-hardhat-deploy
    depends_on:
      hardhat-node:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ./scripts/init-hardhat.sh:/app/init-hardhat.sh:ro
      - deployment-data:/deployment
    command: ['/bin/sh', '/app/init-hardhat.sh']
    networks:
      - withdrawal-network
    restart: 'no'

  # API Server
  api-server:
    container_name: withdrawal-api-server
    depends_on:
      mysql:
        condition: service_healthy
      localstack:
        condition: service_healthy
      hardhat-deploy:
        condition: service_completed_successfully
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/dockerfile.packages
      target: api-server
    ports:
      - 8080:8080
    environment:
      <<: *localstack-account
      NODE_ENV: development
      PORT: 8080
      LOG_FORMAT: simple
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: withdrawal_system
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD:-pass}

      # RPC URL Override for Docker environment
      RPC_URL: http://hardhat-node:8545
    networks:
      - withdrawal-network
    volumes:
      - deployment-data:/deployment:ro
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:8080/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Signing Service
  signing-service:
    container_name: withdrawal-signing-service
    depends_on:
      mysql:
        condition: service_healthy
      localstack:
        condition: service_healthy
      redis:
        condition: service_healthy
      hardhat-deploy:
        condition: service_completed_successfully
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/dockerfile.packages
      target: signing-service
    ports:
      - 3005:3005
    environment:
      <<: *localstack-account
      NODE_ENV: development
      LOG_FORMAT: simple

      # Security (change in production)
      SIGNING_SERVICE_ENCRYPTION_KEY: development-encryption-key-change-in-production-32

      # Secrets Manager
      SIGNING_SERVICE_PRIVATE_KEY_SECRET: signing-service/private-key

      # Queue Configuration
      REQUEST_QUEUE_URL: http://sqs.ap-northeast-2.localhost.localstack.cloud:4566/000000000000/tx-request-queue
      SIGNED_TX_QUEUE_URL: http://sqs.ap-northeast-2.localhost.localstack.cloud:4566/000000000000/signed-tx-queue

      # DLQ Configuration
      REQUEST_DLQ_URL: http://sqs.ap-northeast-2.localhost.localstack.cloud:4566/000000000000/tx-request-dlq
      SIGNED_TX_DLQ_URL: http://sqs.ap-northeast-2.localhost.localstack.cloud:4566/000000000000/signed-tx-dlq

      # RPC URL Override for Docker environment
      RPC_URL: http://hardhat-node:8545

      # Logging
      SIGNING_SERVICE_LOG_LEVEL: info
      SIGNING_SERVICE_AUDIT_LOG_PATH: /app/logs/audit.log

      # Database
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: withdrawal_system
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD:-pass}

      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - withdrawal-network
    volumes:
      - signing-service-logs:/app/logs
      - deployment-data:/deployment:ro
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3005/api/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Transaction Broadcaster
  tx-broadcaster:
    container_name: withdrawal-tx-broadcaster
    depends_on:
      mysql:
        condition: service_healthy
      localstack:
        condition: service_healthy
      redis:
        condition: service_healthy
      hardhat-deploy:
        condition: service_completed_successfully
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/dockerfile.packages
      target: tx-broadcaster
    ports:
      - 3001:3001
    environment:
      <<: *localstack-account
      NODE_ENV: development
      PORT: 3001
      LOG_FORMAT: simple

      # Database
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: withdrawal_system
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD:-pass}

      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379

      # Queue Configuration
      SIGNED_TX_QUEUE_URL: http://sqs.ap-northeast-2.localhost.localstack.cloud:4566/000000000000/signed-tx-queue
      BROADCAST_TX_QUEUE_URL: http://sqs.ap-northeast-2.localhost.localstack.cloud:4566/000000000000/broadcast-tx-queue

      # DLQ Configuration
      SIGNED_TX_DLQ_URL: http://sqs.ap-northeast-2.localhost.localstack.cloud:4566/000000000000/signed-tx-dlq
      BROADCAST_TX_DLQ_URL: http://sqs.ap-northeast-2.localhost.localstack.cloud:4566/000000000000/broadcast-tx-dlq

      # RPC URL Override for Docker environment
      RPC_URL: http://hardhat-node:8545

    networks:
      - withdrawal-network
    volumes:
      - deployment-data:/deployment:ro
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3001/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Transaction Monitor
  tx-monitor:
    container_name: withdrawal-tx-monitor
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      localstack:
        condition: service_healthy
      tx-broadcaster:
        condition: service_healthy
      hardhat-deploy:
        condition: service_completed_successfully
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/dockerfile.packages
      target: tx-monitor
    ports:
      - 3003:3003
    environment:
      <<: *localstack-account
      NODE_ENV: development
      PORT: 3003
      LOG_FORMAT: simple

      # Database
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: withdrawal_system
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD:-pass}

      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: redis://redis:6379

      # SQS Queue Configuration
      BROADCAST_TX_QUEUE_URL: http://sqs.ap-northeast-2.localhost.localstack.cloud:4566/000000000000/broadcast-tx-queue

      # Monitoring Configuration
      MONITORING_ENABLED: 'true'
      WEBSOCKET_ENABLED: 'true'
      POLLING_ENABLED: 'true'

      # Performance
      MAX_CONCURRENT_RPC_CALLS: 10
      BATCH_SIZE: 30
      CACHE_SIZE: 10000

      # RPC URL Override for Docker environment
      RPC_URL: http://hardhat-node:8545

      # WebSocket URL Override for Docker environment (optional)
      WS_URL: ws://hardhat-node:8545

      # Logging
      LOG_LEVEL: info

    networks:
      - withdrawal-network
    volumes:
      - deployment-data:/deployment:ro
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3003/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  withdrawal-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  localstack-data:
    driver: local
  signing-service-logs:
    driver: local
  redis-data:
    driver: local
  deployment-data:
    driver: local
