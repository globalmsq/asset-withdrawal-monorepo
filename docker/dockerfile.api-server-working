# Working Dockerfile for api-server with path fixes
FROM node:20-alpine

# Install dependencies for building native modules
RUN apk add --no-cache python3 make g++ bash

WORKDIR /app

# Copy everything
COPY . .

# Install all dependencies
RUN yarn install --frozen-lockfile

# Generate Prisma client
RUN npx prisma generate

# Build libraries and application
RUN cd packages/shared && yarn build
RUN cd packages/database && yarn build  
RUN cd apps/api-server && yarn build

# Fix module resolution by creating symlinks
RUN mkdir -p /app/node_modules/shared && \
    mkdir -p /app/node_modules/database && \
    cp -r /app/packages/shared/lib/* /app/node_modules/shared/ && \
    cp -r /app/packages/database/lib/* /app/node_modules/database/

# Create a wrapper script that sets up the environment
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'export NODE_PATH=/app/node_modules:/app/packages' >> /app/start.sh && \
    echo 'cd /app' >> /app/start.sh && \
    echo 'exec node apps/api-server/dist/apps/api-server/src/main.js' >> /app/start.sh && \
    chmod +x /app/start.sh

# Environment variables
ENV NODE_ENV=production
ENV PORT=8080

# Expose port
EXPOSE 8080

# Start using the wrapper script
CMD ["/app/start.sh"]