x-localstack-account: &localstack-account
  AWS_DEFAULT_REGION: ap-northeast-2
  AWS_ACCESS_KEY_ID: test
  AWS_SECRET_ACCESS_KEY: test

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: withdrawal-mysql
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: withdrawal_system
      MYSQL_USER: withdrawal_user
      MYSQL_PASSWORD: withdrawal_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    restart: unless-stopped
    networks:
      - withdrawal-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppass"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  localstack:
    image: localstack/localstack:latest
    container_name: withdrawal-localstack
    ports:
      - 4566:4566
      - 4510-4559:4510-4559
    environment:
      <<: *localstack-account
      # DEBUG: 1
      SERVICES: sqs,secretsmanager
      EXTRA_CORS_ALLOWED_ORIGINS: "*"
    volumes:
      - localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./scripts/init-localstack.sh:/etc/localstack/init/ready.d/init-aws.sh
    networks:
      - withdrawal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  sqs-admin:
    image: pacovk/sqs-admin
    ports:
      - 3999:3999
    environment:
      <<: *localstack-account
      SQS_ENDPOINT_URL: http://localstack:4566
      SQS_AWS_REGION: ap-northeast-2
    depends_on:
      - localstack
    networks:
      - withdrawal-network

  # API Server
  api-server:
    container_name: withdrawal-api-server
    depends_on:
      mysql:
        condition: service_healthy
      localstack:
        condition: service_healthy
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/dockerfile.packages
      target: api-server
    command: ["yarn", "dev"]
    ports:
      - 8080:8080
    environment:
      <<: *localstack-account
      NODE_ENV: production
      PORT: 8080
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: withdrawal_system
      MYSQL_USER: root
      MYSQL_PASSWORD: pass
      AWS_ENDPOINT: http://localstack:4566
      AWS_REGION: ap-northeast-2
    networks:
      - withdrawal-network
    volumes:
      - ../prisma:/app/prisma:ro
      - ../apps:/app/apps:ro
      - ../packages:/app/packages:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Signing Service
  signing-service:
    container_name: withdrawal-signing-service
    depends_on:
      mysql:
        condition: service_healthy
      localstack:
        condition: service_healthy
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/dockerfile.packages
      target: signing-service
    ports:
      - 3005:3005
    environment:
      <<: *localstack-account
      NODE_ENV: production
      SIGNING_SERVICE_PORT: 3005

      # Security (change in production)
      SIGNING_SERVICE_ENCRYPTION_KEY: development-encryption-key-change-in-production-32

      # AWS
      AWS_ENDPOINT: http://localstack:4566
      AWS_REGION: ap-northeast-2

      # Secrets Manager
      SIGNING_SERVICE_PRIVATE_KEY_SECRET: signing-service/private-key
      SIGNING_SERVICE_API_KEYS_SECRET: signing-service/api-keys

      # Queue Configuration
      QUEUE_TYPE: localstack
      TX_REQUEST_QUEUE_URL: http://localstack:4566/000000000000/tx-request-queue
      SIGNED_TX_QUEUE_URL: http://localstack:4566/000000000000/signed-tx-queue

      # Polygon Configuration
      POLYGON_NETWORK: amoy
      POLYGON_RPC_URL: https://rpc-amoy.polygon.technology
      POLYGON_CHAIN_ID: 80002

      # Database
      DATABASE_URL: mysql://root:pass@mysql:3306/withdrawal_system

      # Logging
      SIGNING_SERVICE_LOG_LEVEL: info
      SIGNING_SERVICE_AUDIT_LOG_PATH: /app/logs/audit.log
    networks:
      - withdrawal-network
    volumes:
      - signing-service-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  withdrawal-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  localstack-data:
    driver: local
  signing-service-logs:
    driver: local
