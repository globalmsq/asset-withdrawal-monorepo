# Multi-stage Dockerfile for Nx applications
FROM node:20-alpine AS base

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json yarn.lock ./
# In Nx monorepo, apps might not have individual package.json files
# Only copy if they exist
COPY apps/api-server/package.json* ./apps/api-server/
COPY apps/signing-service/package.json* ./apps/signing-service/
COPY apps/tx-processor/package.json* ./apps/tx-processor/
COPY apps/tx-monitor/package.json* ./apps/tx-monitor/
COPY packages/shared/package.json* ./packages/shared/
COPY packages/database/package.json* ./packages/database/

# Install all dependencies
RUN yarn install --frozen-lockfile

# Copy source files
COPY nx.json tsconfig.json ./
COPY apps/ ./apps/
COPY packages/ ./packages/
COPY prisma/ ./prisma/

# Generate Prisma client
RUN npx prisma generate

# Production stage for api-server
FROM node:20-alpine AS api-server

WORKDIR /app

# Copy source files and dependencies from base stage
COPY --from=base /app/package.json ./package.json
COPY --from=base /app/yarn.lock ./yarn.lock
COPY --from=base /app/nx.json ./nx.json
COPY --from=base /app/tsconfig.json ./tsconfig.json
COPY --from=base /app/apps ./apps
COPY --from=base /app/packages ./packages
COPY --from=base /app/prisma ./prisma
COPY --from=base /app/node_modules ./node_modules

# Copy Prisma client
COPY --from=base /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=base /app/node_modules/@prisma ./node_modules/@prisma

# Set environment variables
ENV NODE_ENV=production
ENV PORT=8080

# Expose port
EXPOSE 8080

# Change to api-server directory and start the application
WORKDIR /app/apps/api-server
CMD ["npm", "start"]

# Production stage for signing-service
FROM node:20-alpine AS signing-service

WORKDIR /app

# Copy source files and dependencies from base stage
COPY --from=base /app/package.json ./package.json
COPY --from=base /app/yarn.lock ./yarn.lock
COPY --from=base /app/nx.json ./nx.json
COPY --from=base /app/tsconfig.json ./tsconfig.json
COPY --from=base /app/apps ./apps
COPY --from=base /app/packages ./packages
COPY --from=base /app/prisma ./prisma
COPY --from=base /app/node_modules ./node_modules

# Copy Prisma client
COPY --from=base /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=base /app/node_modules/@prisma ./node_modules/@prisma

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3005

# Expose port
EXPOSE 3005

# Change to signing-service directory and start the application
WORKDIR /app/apps/signing-service
CMD ["npm", "start"]

# Production stage for tx-processor
FROM node:20-alpine AS tx-processor

WORKDIR /app

# Copy source files and dependencies from base stage
COPY --from=base /app/package.json ./package.json
COPY --from=base /app/yarn.lock ./yarn.lock
COPY --from=base /app/nx.json ./nx.json
COPY --from=base /app/tsconfig.json ./tsconfig.json
COPY --from=base /app/apps ./apps
COPY --from=base /app/packages ./packages
COPY --from=base /app/prisma ./prisma
COPY --from=base /app/node_modules ./node_modules

# Copy Prisma client
COPY --from=base /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=base /app/node_modules/@prisma ./node_modules/@prisma

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3001

# Expose port
EXPOSE 3001

# Change to tx-processor directory and start the application
WORKDIR /app/apps/tx-processor
CMD ["npm", "start"]

# Production stage for tx-monitor
FROM node:20-alpine AS tx-monitor

WORKDIR /app

# Copy source files and dependencies from base stage
COPY --from=base /app/package.json ./package.json
COPY --from=base /app/yarn.lock ./yarn.lock
COPY --from=base /app/nx.json ./nx.json
COPY --from=base /app/tsconfig.json ./tsconfig.json
COPY --from=base /app/apps ./apps
COPY --from=base /app/packages ./packages
COPY --from=base /app/prisma ./prisma
COPY --from=base /app/node_modules ./node_modules

# Copy Prisma client
COPY --from=base /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=base /app/node_modules/@prisma ./node_modules/@prisma

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3002

# Expose port
EXPOSE 3002

# Change to tx-monitor directory and start the application
WORKDIR /app/apps/tx-monitor
CMD ["npm", "start"]
